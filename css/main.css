@tailwind base;

/* Write your own custom base styles here */

@font-face {
  font-family: 'Inter';
  font-weight: 400;
  font-display: swap;
  src: url('/fonts/inter-regular.woff2') format('woff2');
}

@font-face {
  font-family: 'Inter';
  font-weight: 500;
  font-display: swap;
  src: url('/fonts/inter-medium.woff2') format('woff2');
}

@font-face {
  font-family: 'Inter';
  font-weight: 600;
  font-display: swap;
  src: url('/fonts/inter-semibold.woff2') format('woff2');
}

@font-face {
  font-family: 'Inter';
  font-weight: 700;
  font-display: swap;
  src: url('/fonts/inter-bold.woff2') format('woff2');
}

@font-face {
  font-family: 'Meslo';
  src: url('/fonts/meslo.woff2') format('woff2');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

* {
  font-family: 'Inter', sans-serif;
}

body {
  font-size: 15px;
}

pre,
code,
code span {
  font-family: 'Meslo', monospace !important;
}

/* Inline code */
:not(pre) > code {
  @apply px-2 py-1 rounded font-mono text-sm text-gray-800 bg-gray-100;
}

/* Start purging... */
@tailwind components;
/* Stop purging. */

/* Write your own custom component styles here */
.btn-blue {
  @apply px-4 py-2 font-bold text-white bg-blue-500 rounded;
}

/* Start purging... */
@tailwind utilities;
/* Stop purging. */

.text-base {
  font-size: 0.9375rem;
  line-height: 1.35rem;
}

/* Your own custom utilities */
@supports (position: sticky) {
  @media (min-width: theme('screens.lg')) {
    .sticky\?lg\:h-screen {
      height: 100vh !important;
    }
    .sticky\?lg\:h-\(screen-16\) {
      height: calc(100vh - theme('spacing.16'));
    }
  }
}

.content-container :target {
  /* <Search />'s h-16 + more spacing */
  scroll-margin-top: theme('spacing.20');
}

.content-container ul > li {
  @apply my-2;
}

.content-container ul > li:before {
  content: 'â€”';
  @apply inline-block mr-3 text-gray-300;
}

.content-container pre {
  @apply p-4 mb-8 overflow-hidden overflow-x-auto text-sm bg-gray-900 rounded;
}

main a {
  @apply text-blue-400;
}

.content-container .heading {
  @apply block font-bold text-gray-900 no-underline hover:text-gray-600 hover:underline;
}

blockquote p {
  @apply text-gray-400 !important;
}

summary {
  @apply select-none cursor-pointer mb-2;
}

table {
  min-width: 600px;
}

th {
  @apply px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wide;
}

thead {
  @apply bg-gray-50;
}

tbody tr:nth-child(even) {
  @apply bg-white;
}

tbody tr:nth-child(odd) {
  @apply bg-gray-50;
}

td {
  @apply px-6 py-4 text-sm text-gray-900 break-all;
  max-width: 150px;
  white-space: pre-wrap;
  word-break: break-word;
}

td:first-child {
  @apply px-6 py-4 text-sm font-medium text-gray-900;
  max-width: 150px;
}

.grid-list li {
  @apply text-base text-gray-700;
  font-size: 0.9375rem;
  line-height: 1.35rem;
}

.grid-list li a {
  @apply mb-2 block;
}

ul.grid-list > li:before {
  display: none;
}

@layer utilities {
  @responsive {
    .scrolling-touch {
      -webkit-overflow-scrolling: touch;
    }
    .scrolling-auto {
      -webkit-overflow-scrolling: auto;
    }
  }
}

#intro-demos {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-around;
  align-items: center;
  margin: 2em auto;
  max-width: 900px;
}
#intro-demos .demo-cell {
  padding-right: 10px;
}

#intro-demos .demo-cell img.laptop {
  max-width: 410px;
}

#intro-demos .demo-cell img {
  width: 100%;
  margin-right: 10px;
}

#intro-demos .demo-cell img.tablet {
  max-width: 280px;
}

#intro-demos .demo-cell img.phone {
  max-width: 90px;
}

.demo-grid {
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
}

.demo-grid > div:last-of-type:nth-child(odd) {
  grid-column: 1 / -1;
}

.search-item.focus-visible li > div {
  @apply bg-gray-800 text-gray-200;
}

.loading {
  --fillColor: 243 244 246;
  --revealColor: 255 255 255;

  background: rgb(var(--fillColor));
  color: transparent;
  position: relative;
}

.loading::after {
  animation: loading 2s infinite;
  background-image: linear-gradient(
    90deg,
    rgb(var(--revealColor) / 0) 0,
    rgb(var(--revealColor) / 0.2) 20%,
    rgb(var(--revealColor) / 0.5) 60%,
    rgb(var(--revealColor) / 0)
  );
  content: '';
  inset: 0;
  position: absolute;
  transform: translateX(-100%);
}
